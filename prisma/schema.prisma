generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    password      String?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

enum ProductAvailability {
    inStock
    outOfStock
    preOrder
    backOrder
}

enum Currencies {
    dollar @map("$")
    euro   @map("€")
    pound  @map("£")
}

model Currency {
    id       Int        @id @default(autoincrement())
    symbol   Currencies @unique
    products Product[]
    country  Country[]
}

model Country {
    id             Int        @id @default(autoincrement())
    name           String     @unique
    code           Int        @unique
    tax            Float
    currencySymbol Currencies @unique
    currency       Currency   @relation(fields: [currencySymbol], references: [symbol])
    cities         City[]
}

model City {
    id          String  @id @default(cuid())
    name        String  @unique
    countryName String
    country     Country @relation(fields: [countryName], references: [name])
}

model ProductRange {
    id       String     @id @default(cuid())
    name     String     @unique
    category Category[]
}

model Category {
    id               String         @id @default(cuid())
    name             String         @unique
    productRangeName String
    productRange     ProductRange   @relation(fields: [productRangeName], references: [name])
    mainCategories   MainCategory[]
}

model MainCategory {
    id           String        @id @default(cuid())
    name         String        @unique
    categoryName String
    category     Category      @relation(fields: [categoryName], references: [name])
    subCategory  SubCategory[]
}

model SubCategory {
    id               String          @id @default(cuid())
    name             String          @unique
    mainCategoryName String
    mainCategory     MainCategory    @relation(fields: [mainCategoryName], references: [name])
    brands           BrandCategory[]
}

model BrandCategory {
    id              String      @id @default(cuid())
    name            String      @unique
    subCategoryName String
    subCategory     SubCategory @relation(fields: [subCategoryName], references: [name])
    product         Product[]
}

model Variant {
    id          String  @id @default(cuid())
    name        String  @unique
    stock       Int
    productName String
    product     Product @relation(fields: [productName], references: [name])
}

model Product {
    id               String              @id @default(cuid())
    createdAt        DateTime            @default(now())
    updatedAt        DateTime            @updatedAt
    name             String              @unique
    brandName        String
    brand            BrandCategory       @relation(fields: [brandName], references: [name])
    price            Float
    color            String
    stockCount       Int
    availability     ProductAvailability
    variants         Variant[]
    description      String
    details          String
    highlights       String[]
    starCount        Int
    reviewCount      Int
    currencySymbol   Currencies
    currency         Currency            @relation(fields: [currencySymbol], references: [symbol])
    image            String
    additionalImages String[]
}
